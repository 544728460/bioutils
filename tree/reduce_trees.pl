#!/usr/bin/perl

=head1 NAME

	reduce_trees.pl - Reduce the number of trees to 10,000 if the given
					  trees file had too many trees. 
					  Usually this trees file were generated by mis-configured
					  BEAST analysis.

=head1 SYNOPSIS

=head1 DESCRIPTION

=head1 HISTORY
	
	0.0.1	2017-11-07
	
=head1 AUTHORS

	zeroliu-at-gmail-dot-com

=cut
					  
use 5.10.0;
use strict;
use warnings;

use File::Basename;

my $usage = << "EOS";
Reduce tree number of a NEXUS format trees file, usually generated by mis-
configured BEAST analysis, to 10,000.

Usage:
reduce_trees.pl <in> [<out>]
EOS

my $fin	= shift or die $usage;

# Generate output filename if necessary
my $fout;

# Final tree number, default 10,000
my $final_tree_no   = 10_000;

unless ($fout = shift) {
	my ($basename, $dir, $suffix) = fileparse($fin, qr/\..*/);
	
	$fout	= $basename . '_10k' . $suffix;
}

open(my $fh_in, "<", $fin) or
	die "[ERROR] Open input file '$fin' failed!\n$!\n";

# Check NEXUS file title
# Whether file started with '#NEXUS'
unless ( <$fh_in> =~ /^#NEXUS/ ) {   # is a nexus file
    warn "[ERROR] '$fin' is not a NEXUS file!\n";

    close $fh_in;

    exit 1;
}

# First scan input trees file, get the total tree number
my $total_tree_no   = 0;

while (<$fh_in>) {
    if (/^tree/) {  # is a tree
        $total_tree_no++;
    }
}

say "Total $total_tree_no trees in the file '$fin'.";

if ($total_tree_no == 0) {
    warn "[ERROR] Not a Tree file!\n";

    exit 1;
}
elsif ($total_tree_no <= 10_000) {
    warn "[NOTE] Tree number is small. Do not need reduce.\n";

    exit 1;
}
else {
    # Do nothing
}

close $fh_in;

# Calculate operate intervals
my $intvl   = int($total_tree_no / $final_tree_no);

my $cur_tree_no     = 0;
my $output_tree_no  = 0;

# Open input file again to process
open($fh_in, "<", $fin) or
	die "[ERROR] Open input file '$fin' failed!\n$!\n";

open(my $fh_out, ">", $fout) or
    die "[ERROR] Create output file '$fout' failed!\n$!\n";

while (<$fh_in>) {
    unless (/^tree/) {  # No 'tree STATE' line, output directly
        print $fh_out $_;
    }
    else {
        if ($cur_tree_no == 0) {    # Output tree 'STATE_0'
            print $fh_out $_;

            $cur_tree_no++;
            $output_tree_no++;
        }
        elsif ($cur_tree_no % $intvl == 0) {    # Fir interval
            print $fh_out $_;

            $cur_tree_no++;
            $output_tree_no++;
        }
        else {  # Dismiss other tree record
            $cur_tree_no++;
        }
    }
}

if ($output_tree_no < 10_001) {
    print $fh_out $_;

    $output_tree_no++;
}

say "[OK] Total output $output_tree_no trees.";

close $fh_in;
close $fh_out;


